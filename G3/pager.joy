(*
    module  : pager.joy
    version : 1.4
    date    : 02/17/25
*)

(*
    Increase start by one screen; unless the last screen is visible.
    This procedure is triggered by the PageDown key.
*)
page_down ==
[over _Scr + over size <] [[_Scr +] dip] [] ifte;

(*
    The editor quits automatically when the text is empty.
    The text is received as [..].
    The starting position within the text is stored below.
*)
page_entry ==
0 swap	(* this is Start, it is followed by Lines *)
[] [page_screen page_read] while;

(*
    Home and hide the cursor.
*)
page_home ==
1 6 gotoxy curhide;		(* home and hide cursor *)

(*
    Write lines of text: it is already known that these lines fit on the screen.
*)
page_lines ==
[null not]			(* as long as there are lines *)
[unswons			(* "\r" putchars - move to start of line *)
 clreoln			(* clear line first *)
 putchars]			(* display line - lines are fully filled *)
while pop;			(* remove empty list *)

(*
    Read a key and take appropriate action, updating the global variables.
    The actions are PageUp, PageDown, End.
    Other keys are ignored.
    The first pop removes the key; the second and third remove lines and start.
*)
page_read ==
getkey
[[[ZUARR =] pop page_up]
 [[ZDARR =] pop page_down]
 [[ZLARR =] pop3 false]
 [pop]
] cond;

(*
    Restore the cursor: position and visibility.
*)
page_restore ==
1 6 gotoxy curshow;		(* home and show cursor *)

(*
    Draw a number of rows and then position the cursor again.
*)
page_screen ==			(* start lines *)
page_home			(* start lines *)
(*
    Extract text and number of lines. Then print lines and start the
    remaining lines with ~. Rows is currently hardcoded as 18.
*)
dup				(* start lines lines *)
2 pick				(* start lines lines start *)
drop				(* start lines text *)
_Scr				(* start lines text rows *)
take				(* start lines text *)
dup				(* start lines text text *)
page_lines			(* start lines text *)
size				(* start lines size *)
_Scr				(* start lines size rows *)
-				(* start lines size-rows *)
neg				(* start lines rows-size *)
['~ putch clreoln newline]	(* start lines *)
times				(* start lines *)
page_restore;			(* start lines *)

(*
    Reduce start by one screen; if negative set to 0.
    This procedure is triggered by the PageUp key.
*)
page_up ==
[_Scr - [negative] [pop 0] [] ifte] dip;
